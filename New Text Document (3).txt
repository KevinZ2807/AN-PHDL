#include iostream
#include string
#include random
#include ctime

stdstring encryptPassword(const stdstring& password) {
     Generate a random seed based on current time
    stdsrand(static_castunsigned int(stdtime(nullptr)));

     Generate a random number between 1000000000 and 9999999999
    stdrandom_device rd;
    stdmt19937 gen(rd());
    stduniform_int_distribution dis(1000000000, 9999999999);
    int randomNum = dis(gen);

     Concatenate the password and random number
    stdstring encryptedPassword = password + stdto_string(randomNum);

     Hash the encrypted password
    stdhashstdstring hasher;
    stdsize_t hashedPassword = hasher(encryptedPassword);

     Convert the hashed password to a string
    stdstring result = stdto_string(hashedPassword);

    return result;
}

stdstring decryptPassword(const stdstring& encryptedPassword) {
     Convert the encrypted password back to a hashed value
    stdsize_t hashedPassword = stdstoull(encryptedPassword);

     Reverse the hashing process to retrieve the original password
    stdstring decryptedPassword = stdto_string(hashedPassword);

     Remove the random number from the decrypted password
    decryptedPassword = decryptedPassword.substr(0, decryptedPassword.length() - 10);

    return decryptedPassword;
}

int main() {
    stdstring password;
    stdcout  Enter your password ;
    stdcin  password;

    stdstring encryptedPassword = encryptPassword(password);
    stdcout  Encrypted password   encryptedPassword  stdendl;

    stdstring decryptedPassword = decryptPassword(encryptedPassword);
    stdcout  Decrypted password   decryptedPassword  stdendl;

    return 0;
}