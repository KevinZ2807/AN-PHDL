#include <iostream>
#include <string>
#include <openssl/evp.h>

using namespace std;

string hash_password(string password) {
    const EVP_MD *md = EVP_sha256();
    unsigned char hash[EVP_MAX_MD_SIZE];
    unsigned int hash_len;

    EVP_DigestInit(md);
    EVP_DigestUpdate(&md, password.c_str(), password.length());
    EVP_DigestFinal(md, hash, &hash_len);

    string hashed_password(reinterpret_cast<const char*>(hash), hash_len);
    return hashed_password;
}

int main() {
    string password;
    cout << "Enter your password: ";
    cin >> password;

    string hashed_password = hash_password(password);
    cout << "Hashed password: " << hashed_password << endl;

    return 0;
}
#include <iostream>
#include <string>
#include <openssl/evp.h>

using namespace std;

string decrypt_password(string hashed_password) {
    const EVP_MD *md = EVP_sha256();
    unsigned char hash[EVP_MAX_MD_SIZE];
    unsigned int hash_len;

    EVP_DigestInit(md);
    EVP_DigestUpdate(&md, hashed_password.c_str(), hashed_password.length());
    EVP_DigestFinal(md, hash, &hash_len);

    string decrypted_password(reinterpret_cast<const char*>(hash), hash_len);
    return decrypted_password;
}

int main() {
    string hashed_password;
    cout << "Enter your hashed password: ";
    cin >> hashed_password;

    string decrypted_password = decrypt_password(hashed_password);
    cout << "Decrypted password: " << decrypted_password << endl;

    return 0;
}